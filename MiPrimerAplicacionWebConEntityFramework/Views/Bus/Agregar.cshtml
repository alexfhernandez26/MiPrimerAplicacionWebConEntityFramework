@model MiPrimerAplicacionWebConEntityFramework.Models.BusCLS

@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listasucursal = (List<SelectListItem>)ViewBag.listanombreSucursal;
    List<SelectListItem> listatipobus = (List<SelectListItem>)ViewBag.listanombretipobus;
    List<SelectListItem> listatipomodelo = (List<SelectListItem>)ViewBag.listanombretimodelo;
    List<SelectListItem> listatipomarca = (List<SelectListItem>)ViewBag.listanombremarca;
}

<h2>Agregar</h2>
<div class="row">
    <div class="col-md-10">
        @using (Html.BeginForm("Agregar", "Bus", FormMethod.Post, new {@id= "frmGuardar" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>BusCLS</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.iidsucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidsucursal", listasucursal, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidsucursal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidtipobus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidtipobus", listatipobus, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidtipobus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.placa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechacompra, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechacompra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechacompra, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidmodelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidmodelo", listatipomodelo, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidmodelo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numeroFilas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numeroFilas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numeroFilas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numeroColumnas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numeroColumnas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numeroColumnas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.iidmarca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidmarca", listatipomarca, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidmarca, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                        Guardar
                    </button>
                    @Html.ActionLink("Atras", "Index", "Bus", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Desea guardar los cambios?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" onclick="Guardar()" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<script>function Guardar() {
        var frmguardar = document.getElementById("frmGuardar");

        frmguardar.submit();
    }</script>